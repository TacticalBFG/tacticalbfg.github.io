31/10/2020: Alpha 2.01:
  * Fixed some issues with whitelist
  * Fixed autoexecute
  * Added some new preprocessor flags for beta features

31/10/2020: Alpha 2.0:
  * Official re-release of Helicity
  * Update for Roblox
  * After so long, Luau support is finally here! (didnt work on it back in April like I should've, so it was heavily delayed)
Note: some scripts may not fully work for a while because there's still some minor issues with conversion. I provided a way to get around this however (see the bytecode library below)
  * Still some issues with conversion because I kinda fucked up somewhere when I was writing 5.4 transpiler
  * Switched to using Lua 5.4
  * Added extra comound operators and some c-style syntax (+=, -=, *=, /=, %=, ^=, ..=,  &&, ||, !, !=
  * Added some more lua functions
  * Implemented full debug library (see features tab for everything)
  * Rewrote luastate scanner - should be as fast and as stable as I can get it (might still kick because it uses hooks)
  * Re-did ui;  should be much cleaner, faster, and easier to use.
  * Re-did SS (not included in alpha 2.0.0)
  	- SS execution should be many times faster than any SS you've ever seen before (its noticeable btw)
	- SS shouldn't lag nearly as much if the server's scripts are busy
	- Allowed for nearly any module to be ran on SS without any conversion needed
	- Can't log SS remotes anymore (atleast I don't think)
  * Wrote completely new decompiler. It took many ideas from IDA and tried to apply them to a Roblox script decompiler ( again not included in alpha 2.0.0 due to instabilities)
  	- Re-name variables: make it easier to read instead of just  local v85 = "hello"
	- Re-name functions: see above??
	- View function & event cross-references: see where functions and events are called and their exact calling syntax!
  	- Syntax highlighting: looks very pretty (?)
  
  * Happy Halloween
	

3/6/20: Pre-Alpha 2.0.5:
  * Updated for Roblox
  * Roblox changed some stuff around, so pls let me know if any functions crash
  * Switched to a Luau compiler instead of a transpiler (more accurate and faster, u should be able to run more scripts now)
  * Broke some stuff for a meme; wait a few more days for me to complete compiler and itll work better

2/6/20: Pre-Alpha 2.0.4:
  * Improvements to LuaState scanning - much more stable!
  * Can now inject on other games that were crashing before cuz luastate fix
  * Fixed getrawmetatable shutting u down
  * Fixed decompiler crashing - returns constants instead until finished
  * Added back readfile
  * Tightened security on writefile extensions
  * Fixed weird injection issues people were having

1/6/20: Pre-Alpha 2.0.3:
  * Switched to using a bootstrapper for installation
  * Finally added automatic update re-downloading
  * Other small changes

30/5/20: Pre-Alpha 2.0:
 * Completely rewrote Helicity
 * Luau stuff (see b2.0 cuz official beta will just be fixed pre-alph)

21/8/19: Beta 1.0.5:
 * Update for Roblox
 * Changed a few things internally to hopefully make it a bit faster
 * Patched some weird security flaw

16/8/19: Beta 1.0.4:
 * Update for Roblox
 * Added "Options" menu to Helicity UI
 * Added "Always On Top" option to Heliciy
 * Added "Auto Inject" option
 * Added "Beta Tester" option (will only be in use when I have something I need to test.)


7/8/19: Beta 1.0.3:
 * Update for Roblox
 * I have some new stuff coming soon, just wait a few more days

5/8/19: Beta 1.0.2:
 * Fixed stability, Helicity shouldn't act like my emotions towards Emma anymore

1/8/19: Beta 1.0.1:
 * Update for Roblox
 * Fixed Helicity's awful stability on injection
 * Note: Helicity is a bit broken rn because custom functions crash (working on rewriting callcheck), won't be able to be fixed for a few days because im going camping
 * Due to dead custom functions: temporarily disabled autoexecute. (u can still use like farm scripts tho)
 * Replaced some broken SS scripts
 * Fixed saveinstance
 * Fixed Helicity UI not responding 2 seconds after inject (im master coder yes)
 * Fixed Helicity crashing on a few more games
 * MINORLY fixed decompiler. Still won't give a fully decompiled script, but you might be able to pull some things out of %localappdata%\Roblox\Version\roblox version\HelicityDecompilerProto.lua
 * Added docs file
 * Temporarily disabled LuaU """""""execution""""""" until I finish actual LuaU proto conversion
 * Changed some stuff internally to make it faster and easier to update.

17/7/19: Beta 1.0 (official release)
 * Update for Roblox update
 * Fixed Helicity crashing when injecting into certain games
 * You can now open Helicity Hub using a key (default is NumpadZero, feel free to change it in Scripts/autorun/init.lua)

14/7/19: Alpha 1.3:
 * Added debug.getupvalues
 * Added debug.getconstants
 * Added support for require(assetId) (require(Instance) doesnt work yet and idk why, fixing soon)

 * Fixed debug.getinfo

 * Removed DataModel:OpenVideosFolder() & DataModel:OpenScreenshotsFolder()

 * Tried fixing crashing when clicking on Helicity Hub icon in lower left corner
 * Improved security for writefile & readfile
 * Compiler errors are now shown in Roblox, as apposed to the Helicity console
 * Fixed Helicity not injecting for literally anyone (apparently definitions in header files are like hitler to compilers)


10/7/19: Alpha 1.2:
- NOTE: This update will NOT work on some games, as Roblox is now launching their new LuaU VM.
Helicity will have a temporary fix in the coming weeks for this, until I finish the new VM.
 * Update for Roblox
 * Fixed some people crashing on inject
 * HelicityHub now allows you to use shortened names
 * Switched LuaState a bit, RemoteSpy/getsenv/getupvalues/getgc/whatever should work fine now.
 * Fixed vulnerability that let u get a SecureScripts source
 * Helicity will now automatically translate chatted discord emojis into actual emojis
(E.G. saying :pensive: ingame will chat pensive emoji have fun)

9/7/19: Alpha 1.1:
 * fixed helicity not showing up for some people (roblox just randomly decided to change their install directory..)

9/7/19: Alpha 1.0 (real version)
 * added hash library
 * added hash.sha256
 * added base64 library
 * added base64.encode
 * added base64.decode

 * added debug.getupvalue
 * added debug.setmetatable
 * added debug.setupvalue

 * fixed iscclosure
 * fixed getnilinstances
 * fixed some c++ issues and yea


4/7/19: Pre Alpha 1.0 (Fortain Tester Version)
 * 1st release
